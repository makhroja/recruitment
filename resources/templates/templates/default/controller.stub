<?php

namespace [% namespace %];

[% use_command_placeholder %]
use Exception;
use Yajra\DataTables\DataTables;
use Illuminate\Support\Facades\Response;
use Illuminate\Support\Str;
use Validator;

class [% controller_name %] [% controller_extends %]
{
[% constructor %]

    public function index()
    {
        $[% model_name_plural_variable %] = [% model_name_class %]::[% with_relations_for_index %]paginate([% models_per_page %]);

        return view('[% index_view_name %]'[% view_variables_for_index %]);
    }

    public function create()
    {
        [% relation_collections %]
        
        return view('[% create_view_name %]'[% view_variables_for_create %]);
    }

    public function store([% type_hinted_request_name %])
    {
        try {
         $request = $request->merge([
            'uuid' => Str::uuid()->getHex(),
        ]);
        $validator = $this->[% model_name_singular_variable %]Validator($request->all());

        if ($validator->passes()) {

             [% model_name_class %]::create($request->all());

            return redirect()->route('[% model_name_plural_variable %].index')
                ->with(['success' => '[% model_name_class %] berhasil dibuat.']);
        }
        return back()
            ->withErrors($validator)
            ->withInput();

        } catch (Exception $exception) {

            return back()->withInput()
                ->withErrors(['unexpected_error' => [% unexpected_error %]]);
        }
    }


    public function show($uuid)
    {
        $[% model_name_singular_variable %] = [% model_name_class %]::[% with_relations_for_show %]where('uuid', $uuid)->first();

        return view('[% show_view_name %]'[% view_variables_for_show %]);
    }


    public function edit($uuid)
    {
        $[% model_name_singular_variable %] = [% model_name_class %]::where('uuid', $uuid)->first();
        [% relation_collections %]

        return view('[% edit_view_name %]'[% view_variables_for_edit %]);
    }


    public function update($uuid, [% type_hinted_request_name %])
    {
        try {
            $validator = $this->[% model_name_singular_variable %]Validator($request->all());

            if ($validator->passes()) {

                $[% model_name_singular_variable %] = [% model_name_class %]::where('uuid', $uuid)->first();
                $[% model_name_singular_variable %]->update($request->all());

                return redirect()->route('[% model_name_plural_variable %].index')
                    ->with(['success' => '[% model_name_class %] berhasil simpan.']);
            }
            return back()
                ->withErrors($validator)
                ->withInput();

        } catch (Exception $exception) {

            return back()->withInput()
                ->withErrors(['unexpected_error' => [% unexpected_error %]]);
        }        
    }


    public function destroy($uuid)
    {
        try {
            $[% model_name_singular_variable %] = [% model_name_class %]::where('uuid', $uuid)->first();
            $[% model_name_singular_variable %]->delete();

            return Response::json([
                'Success' => [% model_was_deleted %]
            ]);

        } catch (Exception $exception) {

            return back()->withInput()
                ->withErrors(['unexpected_error' => [% unexpected_error %]]);
        }
    }

    public function get[% model_name_class %]Json(Request $request)
    {
        $[% model_name_singular_variable %] = [% model_name_class %]::latest()->get();

        return DataTables::of($[% model_name_singular_variable %])
            ->addIndexColumn()

            ->addColumn('action', function ($row) { 
                $btn = '<button href="javascript:void(0)" data-id="' . $row->uuid . '" data-original-title="Show" class="btn btn-outline-primary btn-icon show"><i class="feather icon-eye"></i></button>';

                $btn = $btn . ' <button href="javascript:void(0)" data-id="' . $row->uuid . '" data-original-title="Edit" class="btn btn-outline-success btn-icon edit"><i class="feather icon-edit"></i></button>';

                $btn = $btn . ' <button href="javascript:void(0)" data-name="' . $row->name . '" data-id="' . $row->uuid . '" data-original-title="Delete" class="btn btn-outline-danger btn-icon delete"><i class="feather icon-trash"></i></button>';

                return $btn;
            })
            ->rawColumns(['action'])
            ->make(true);
    }
    
[% affirm_method %]
[% get_data_method %]
[% upload_method %]


}
